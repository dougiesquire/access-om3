diff --git a/MOM6/config_src/drivers/nuopc_cap/mom_cap.F90 b/MOM6/config_src/drivers/nuopc_cap/mom_cap.F90.new
index 2841c71..7793782 100644
--- a/MOM6/config_src/drivers/nuopc_cap/mom_cap.F90
+++ b/MOM6/config_src/drivers/nuopc_cap/mom_cap.F90.new
@@ -2,8 +2,9 @@
 
 module MOM_cap_mod
 
+use field_manager_mod,        only: field_manager_init, field_manager_end
 use MOM_domains,              only: get_domain_extent
-use MOM_io,                   only: stdout, io_infra_end
+use MOM_io,                   only: stdout, io_infra_end, slasher
 use mpp_domains_mod,          only: mpp_get_compute_domains
 use mpp_domains_mod,          only: mpp_get_ntile_count, mpp_get_pelist, mpp_get_global_domain
 use mpp_domains_mod,          only: mpp_get_domain_npes
@@ -29,6 +30,7 @@ use MOM_cap_methods,          only: mom_import, mom_export, mom_set_geomtype, mo
 use MOM_cap_methods,          only: med2mod_areacor, state_diagnose
 use MOM_cap_methods,          only: ChkErr
 use MOM_ensemble_manager,     only: ensemble_manager_init
+use MOM_coupler_types,        only: coupler_1d_bc_type
 
 #ifdef CESMCOUPLED
 use shr_log_mod,             only: shr_log_setLogUnit
@@ -36,6 +38,11 @@ use nuopc_shr_methods,       only: get_component_instance
 #endif
 use time_utils_mod,           only: esmf2fms_time
 
+#ifdef _USE_GENERIC_TRACER
+use MOM_coupler_types,        only: coupler_type_initialized, coupler_type_spawn
+use MOM_cap_gtracer_flux,     only: gas_exchange_init, gas_fields_restore, gas_fields_restart
+#endif
+
 use, intrinsic :: iso_fortran_env, only: output_unit
 
 use ESMF,  only: ESMF_ClockAdvance, ESMF_ClockGet, ESMF_ClockPrint, ESMF_VMget
@@ -151,6 +158,12 @@ type(ESMF_GeomType_Flag) :: geomtype
 character(len=8)  :: restart_mode = 'alarms'
 character(len=16) :: inst_suffix = ''
 
+#ifdef _USE_GENERIC_TRACER
+logical :: use_generic_tracer = .true.
+#else
+logical :: use_generic_tracer = .false.
+#endif
+
 contains
 
 !> NUOPC SetService method is the only public entry point.
@@ -392,6 +405,8 @@ subroutine InitializeAdvertise(gcomp, importState, exportState, clock, rc)
   type (ocean_public_type),      pointer :: ocean_public => NULL()
   type (ocean_state_type),       pointer :: ocean_state => NULL()
   type(ice_ocean_boundary_type), pointer :: Ice_ocean_boundary => NULL()
+  type(coupler_1d_bc_type),      pointer :: gas_fields_ocn => NULL() ! Only used if use_generic_tracer = .true.
+  type(coupler_1d_bc_type),      pointer :: gas_fluxes => NULL()     ! Only used if use_generic_tracer = .true.
   type(ocean_internalstate_wrapper)      :: ocean_internalstate
   type(ocean_grid_type),         pointer :: ocean_grid => NULL()
   type(directories)                      :: dirs
@@ -423,6 +438,7 @@ subroutine InitializeAdvertise(gcomp, importState, exportState, clock, rc)
   character(len=512)                     :: restartfile          ! Path/Name of restart file
   character(len=2048)                    :: restartfiles         ! Path/Name of restart files
                                                                  ! (same as restartfile if single restart file)
+  character(240)                         :: additional_restart_dir  ! Only used if use_generic_tracer = .true.
   character(len=*), parameter            :: subname='(MOM_cap:InitializeAdvertise)'
   character(len=32)                      :: calendar
   character(len=:), allocatable          :: rpointer_filename
@@ -498,6 +514,8 @@ subroutine InitializeAdvertise(gcomp, importState, exportState, clock, rc)
   if (chkerr(rc,__LINE__,u_FILE_u)) return
   call MOM_infra_init(mpi_comm_mom)
 
+  call field_manager_init
+
   ! determine the calendar
   if (cesm_coupled) then
     call NUOPC_CompAttributeGet(gcomp, name="calendar", value=cvalue, &
@@ -630,11 +648,39 @@ subroutine InitializeAdvertise(gcomp, importState, exportState, clock, rc)
   endif
 
   ocean_public%is_ocean_pe = .true.
-  if (cesm_coupled .and. len_trim(inst_suffix)>0) then
-    call ocean_model_init(ocean_public, ocean_state, time0, time_start, &
-      input_restart_file=trim(adjustl(restartfiles)), inst_index=inst_index)
+  if (use_generic_tracer) then
+    ! Set NUOPC attribute additional_restart_dir to RESTART/ if not defined
+    additional_restart_dir = "RESTART/"
+    call NUOPC_CompAttributeGet(gcomp, name="additional_restart_dir", value=cvalue, &
+        isPresent=isPresent, isSet=isSet, rc=rc)
+    if (ChkErr(rc,__LINE__,u_FILE_u)) return
+    if (isPresent .and. isSet) then
+      additional_restart_dir = slasher(cvalue)
+    else
+      call ESMF_LogWrite('MOM_cap:additional_restart_dir unset. Defaulting to '//trim(additional_restart_dir), &
+            ESMF_LOGMSG_INFO)
+    endif
+    call NUOPC_CompAttributeSet(gcomp, name="additional_restart_dir", value=additional_restart_dir, rc=rc)
+    if (chkerr(rc,__LINE__,u_FILE_u)) return
+      
+    ! Initialise structures for extra tracer fluxes
+    ! See https://github.com/NOAA-GFDL/FMScoupler/blob/93ce3642a7951eb11d7d39441911717923dfc768/full/coupler_main.F90#L1689
+    call gas_exchange_init(gas_fields_ocn=gas_fields_ocn, gas_fluxes=gas_fluxes)
+  
+    if (cesm_coupled .and. len_trim(inst_suffix)>0) then
+      call ocean_model_init(ocean_public, ocean_state, time0, time_start, gas_fields_ocn=gas_fields_ocn, &
+        input_restart_file=trim(adjustl(restartfiles)), inst_index=inst_index)
+    else
+      call ocean_model_init(ocean_public, ocean_state, time0, time_start, gas_fields_ocn=gas_fields_ocn, &
+        input_restart_file=trim(adjustl(restartfiles)))
+    endif
   else
-    call ocean_model_init(ocean_public, ocean_state, time0, time_start, input_restart_file=trim(adjustl(restartfiles)))
+    if (cesm_coupled .and. len_trim(inst_suffix)>0) then
+      call ocean_model_init(ocean_public, ocean_state, time0, time_start, &
+        input_restart_file=trim(adjustl(restartfiles)), inst_index=inst_index)
+    else
+      call ocean_model_init(ocean_public, ocean_state, time0, time_start, input_restart_file=trim(adjustl(restartfiles)))
+    endif
   endif
 
   ! GMM, this call is not needed in CESM. Check with EMC if it can be deleted.
@@ -702,6 +748,18 @@ subroutine InitializeAdvertise(gcomp, importState, exportState, clock, rc)
     Ice_ocean_boundary%hcond           = 0.0
   endif
 
+  if (use_generic_tracer) then
+    ! Allocate fields for extra tracer fluxes in Ice_ocean_boundary
+    ! see https://github.com/NOAA-GFDL/FMScoupler/blob/77618869f48507c8629f28457cb701e25e1ea4fc/full/ice_ocean_flux_exchange.F90#L165
+    if (.not.coupler_type_initialized(Ice_ocean_boundary%fluxes)) &
+      call coupler_type_spawn(gas_fluxes, Ice_ocean_boundary%fluxes, (/isc,isc,iec,iec/), &
+                              (/jsc,jsc,jec,jec/))
+
+    ! Restore fields from restart files
+    call get_MOM_input(dirs=dirs)
+    call gas_fields_restore(ocean_public%fields, ocean_public%domain, dirs%restart_input_dir)
+  endif
+
   call query_ocean_state(ocean_state, use_waves=use_waves, wave_method=wave_method)
   if (use_waves) then
     if (wave_method == "EFACTOR") then
@@ -773,6 +831,14 @@ subroutine InitializeAdvertise(gcomp, importState, exportState, clock, rc)
     endif
   endif
 
+  if (use_generic_tracer) then
+    ! Add import fields required for extra tracer fluxes
+    ! TODO: Need logic here to determine which fields to import based on
+    ! Ice_ocean_boundary%fluxes. For now just hardcoding for BLING gas flux fields
+    call fld_list_add(fldsToOcn_num, fldsToOcn, "Sa_co2prog", "will provide")
+    call fld_list_add(fldsToOcn_num, fldsToOcn, "Sa_o2"     , "will provide")
+  endif
+
   !--------- export fields -------------
   call fld_list_add(fldsFrOcn_num, fldsFrOcn, "ocean_mask"                 , "will provide")
   call fld_list_add(fldsFrOcn_num, fldsFrOcn, "sea_surface_temperature"    , "will provide")
@@ -1487,6 +1553,7 @@ subroutine ModelAdvance(gcomp, rc)
   type (ocean_public_type),      pointer :: ocean_public       => NULL()
   type (ocean_state_type),       pointer :: ocean_state        => NULL()
   type(ice_ocean_boundary_type), pointer :: Ice_ocean_boundary => NULL()
+  type(coupler_1d_bc_type),      pointer :: gas_fields_atm => NULL() !< Only used if use_generic_tracer = .true.
   type(ocean_internalstate_wrapper)      :: ocean_internalstate
   type(ocean_grid_type)        , pointer :: ocean_grid
   type(time_type)                        :: Time
@@ -1509,6 +1576,7 @@ subroutine ModelAdvance(gcomp, rc)
   character(len=*),parameter             :: subname='(MOM_cap:ModelAdvance)'
   character(len=8)                       :: suffix
   character(len=:), allocatable          :: rpointer_filename
+  character(240)                         :: additional_restart_dir
   integer                                :: num_rest_files
 
   rc = ESMF_SUCCESS
@@ -1617,8 +1685,17 @@ subroutine ModelAdvance(gcomp, rc)
     ! Import data
     !---------------
 
-    call mom_import(ocean_public, ocean_grid, importState, ice_ocean_boundary, cesm_coupled, rc=rc)
-    if (ChkErr(rc,__LINE__,u_FILE_u)) return
+    if (use_generic_tracer) then
+      ! gas_fields_atm was already initialised in InitializeAdvertise. This just returns the pointer
+      call gas_exchange_init(gas_fields_atm=gas_fields_atm)
+      
+      call mom_import(ocean_public, ocean_grid, importState, ice_ocean_boundary, cesm_coupled, &
+            rc=rc, gas_fields_atm=gas_fields_atm)
+      if (ChkErr(rc,__LINE__,u_FILE_u)) return
+    else
+      call mom_import(ocean_public, ocean_grid, importState, ice_ocean_boundary, cesm_coupled, rc=rc)
+      if (ChkErr(rc,__LINE__,u_FILE_u)) return
+    end if
 
     !---------------
     ! Update MOM6
@@ -1667,7 +1744,7 @@ subroutine ModelAdvance(gcomp, rc)
       ! determine restart filename
       call ESMF_ClockGetNextTime(clock, MyTime, rc=rc)
       if (ChkErr(rc,__LINE__,u_FILE_u)) return
-      call ESMF_TimeGet (MyTime, yy=year, mm=month, dd=day, h=hour, m=minute, s=seconds, rc=rc )
+      call ESMF_TimeGet (MyTime, yy=year, mm=month, dd=day, s=seconds, rc=rc )
       if (ChkErr(rc,__LINE__,u_FILE_u)) return
 
       if (cesm_coupled) then
@@ -1725,6 +1802,14 @@ subroutine ModelAdvance(gcomp, rc)
 
       endif
 
+      if (use_generic_tracer) then
+        ! Write fields for extra tracer fluxes to their internally defined ocean restart file
+        call NUOPC_CompAttributeGet(gcomp, name="additional_restart_dir", value=additional_restart_dir, rc=rc)
+        if (ChkErr(rc,__LINE__,u_FILE_u)) return
+
+        call gas_fields_restart(ocean_public%fields, ocean_public%domain, additional_restart_dir)
+      endif
+
       if (is_root_pe()) then
         write(stdout,*) subname//' writing restart file ',trim(restartname)
       endif
@@ -1953,6 +2038,7 @@ subroutine ocean_model_finalize(gcomp, rc)
   integer                                :: alarmCount
   character(len=64)                      :: timestamp
   logical                                :: write_restart
+  character(240)                         :: additional_restart_dir
   character(len=*),parameter  :: subname='(MOM_cap:ocean_model_finalize)'
 
   if (is_root_pe()) then
@@ -1984,6 +2070,16 @@ subroutine ocean_model_finalize(gcomp, rc)
 
   call ocean_model_end(ocean_public, ocean_State, Time, write_restart=write_restart)
 
+  if (write_restart .and. use_generic_tracer) then
+    ! Write fields for extra tracer fluxes to their internally defined ocean restart file
+    call NUOPC_CompAttributeGet(gcomp, name="additional_restart_dir", value=additional_restart_dir, rc=rc)
+    if (ChkErr(rc,__LINE__,u_FILE_u)) return
+
+    call gas_fields_restart(ocean_public%fields, ocean_public%domain, additional_restart_dir)
+  endif
+
+  call field_manager_end()
+
   call io_infra_end()
   call MOM_infra_end()
 
